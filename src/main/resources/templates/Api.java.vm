package ${package}.${moduleName}.web.api;

import lombok.extern.slf4j.Slf4j;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;


import   ${package}.client.base.CommonResult;
import   ${package}.${moduleName}.service.${className}Service;
import   ${package}.service.base.BaseControllerImpl;
import   ${package}.service.base.BaseServiceAO;
import   ${package}.${moduleName}.client.domain.${className}DO;
import   ${package}.${moduleName}.client.query.${className}QueryDO;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api(description = "${comments}-相关接口")
@Slf4j
@RestController
@RequestMapping("/api/${pathName}")
public class ${className}Api extends BaseControllerImpl<${className}DO, ${className}QueryDO> {

    @Autowired
    private ${className}Service baseService;

    @Override
    public BaseServiceAO<${className}DO, ${className}QueryDO> getService() {
        return baseService;
    }
    /**
     * 通用查询逻辑
     *
     * @param q        查询对象
     * @return
     */
    @ApiOperation(value = "通用查询逻辑", httpMethod = "GET", notes = "通用查询逻辑")
    @RequestMapping("query")
    public CommonResult<List<${className}DO>> select(@ModelAttribute("pojo") ${className}QueryDO q) {
        CommonResult<List<${className}DO>> query = getService().query(q);
        CommonResult<Integer> count = getService().count(q);
        query.setTotal(count.getResult());
        return query;
    }

    /**
     * 获取详情
     *
     * @return
     */
    @ApiOperation(value = "获取详情", httpMethod = "GET", notes = "获取详情")
    @RequestMapping("get")
    public CommonResult<${className}DO> detail(@RequestParam("id") Long id) {
        return getService().get(id);
    }

    /**
     * 通用更新逻辑
     *
     * @param t
     * @return
     */
    @ApiOperation(value = "通用更新逻辑", httpMethod = "GET", notes = "通用更新逻辑")
    @RequestMapping("update")
    public CommonResult<Long> update(@ModelAttribute("pojo") ${className}DO t) {
        return getService().modify(t);
    }

    /**
     * 通用删除逻辑
     *
     * @param id
     * @return
     */
    @ApiOperation(value = "通用删除逻辑", httpMethod = "GET", notes = "通用删除逻辑")
    @RequestMapping("delete")
    public CommonResult<Long> delete(@RequestParam("id") Long id) {
        return getService().remove(id);
    }

    /**
     * 通用插入逻辑
     *
     * @param t
     * @return
     */
    @ApiOperation(value = "通用插入逻辑", httpMethod = "POST", notes = "通用插入逻辑")
    @RequestMapping("add")
    public CommonResult<${className}DO> insert(@ModelAttribute("pojo") ${className}DO t) {
        return getService().save(t);
    }
}
